plugins {
    id "com.github.jk1.tcdeps" version "0.15"
}

repositories {
    teamcityServer {
        url = 'http://teamcity.jetbrains.com'
    }
}

configurations {
    kotlinJVM
    kotlinJS
    library
}

dependencies {
    compile project(":kotlin.web.demo.backend:compilers")

    def root = "$kotlinBuildType:$kotlinBuild:kotlin-plugin-${pluginBuild}.zip!/Kotlin/kotlinc/lib"

    kotlinJVM tc("$root/kotlin-compiler.jar")
    kotlinJVM tc("$kotlinBuildType:$kotlinBuild:kotlin-plugin-${pluginBuild}.zip!/Kotlin/lib/kotlin-plugin.jar")
    kotlinJVM tc("$root/kotlin-script-runtime.jar")
    kotlinJVM tc("$root/kotlin-runtime.jar")
    kotlinJS tc("$root/kotlin-jslib.jar")

    library tc("$root/kotlin-reflect.jar")
    library tc("$root/kotlin-test.jar")
    library tc("$root/kotlin-jslib.jar")
    library "org.jetbrains.kotlinx:kotlinx-coroutines-core:0.17"
    library group: 'org.jetbrains.kotlin', name: 'kotlin-stdlib-jre8', version: stdlibVersion
    library group: 'io.arrow-kt', name: 'arrow-data', version: arrowKtVersion

    /**
     * ADD DEPENDENCIES TO KOTLIN 1.1.60 COMPILER
     *
     * If you want to add some another dependencies to kotlin-compiler you can use 'library' task.
     *
     * For example:
     *
     * library "your dependency from maven"
     *
     * FYI: Pay attention if yor library has got reflections, work with files and etc
     * Please configure the 'executors.policy.template' in web-demo-backend.
     * @see <a href="https://docs.oracle.com/javase/7/docs/technotes/guides/security/PolicyFiles.html">Java Security Police</a>
     *
     * HOW TO SET Java Security Police in 'executors.policy.template'
     *
     * If you want to add own dependency please use marker @WRAPPERS_LIB@
     *
     * For example:
     *
     * grant codeBase "file:@WRAPPERS_LIB@/junit-4.12.jar" {
     *      permission java.lang.reflect.ReflectPermission "suppressAccessChecks";
     *      permission java.lang.RuntimePermission "setIO";
     *      permission java.io.FilePermission "<<ALL FILES>>", "read";
     *      permission java.lang.RuntimePermission "accessDeclaredMembers";
     * };
     */


    compile fileTree(dir: projectDir.toString() + File.separator + "kotlin", include: '*.jar')
}

task copyKotlinLibs(type: Copy) {
    from configurations.kotlinJVM
    into projectDir.toString() + File.separator + "kotlin"
}
